//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
// 
namespace Viiar.AtmFinder.W8.OnlineServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://viiar-consulting.lv/atmfinder/azureservices")]
    public partial class ServiceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyCashInMachinesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyCashOutMachinesField;
        
        private System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyOfficesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyCashInMachines {
            get {
                return this.NearbyCashInMachinesField;
            }
            set {
                if ((object.ReferenceEquals(this.NearbyCashInMachinesField, value) != true)) {
                    this.NearbyCashInMachinesField = value;
                    this.RaisePropertyChanged("NearbyCashInMachines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyCashOutMachines {
            get {
                return this.NearbyCashOutMachinesField;
            }
            set {
                if ((object.ReferenceEquals(this.NearbyCashOutMachinesField, value) != true)) {
                    this.NearbyCashOutMachinesField = value;
                    this.RaisePropertyChanged("NearbyCashOutMachines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Viiar.AtmFinder.W8.OnlineServices.Entity> NearbyOffices {
            get {
                return this.NearbyOfficesField;
            }
            set {
                if ((object.ReferenceEquals(this.NearbyOfficesField, value) != true)) {
                    this.NearbyOfficesField = value;
                    this.RaisePropertyChanged("NearbyOffices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://viiar-consulting.lv/atmfinder/azureservices")]
    public partial class Entity : Viiar.AtmFinder.W8.OnlineServices.BaseEntity {
        
        private string AddressField;
        
        private string AddressShortField;
        
        private Viiar.AtmFinder.W8.OnlineServices.CashDirection CashDirectionField;
        
        private string CityField;
        
        private string DescriptionField;
        
        private decimal DistanceField;
        
        private string DistanceUnitsField;
        
        private string DistanceViewField;
        
        private Viiar.AtmFinder.W8.OnlineServices.EntityType EntityTypeField;
        
        private System.Guid IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string RegionField;
        
        private bool ShowCommissionWithdrawalSignField;
        
        private string TitleField;
        
        private string TitleShortField;
        
        private string WorkingHoursField;
        
        private int WorkingHoursEndField;
        
        private int WorkingHoursStartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressShort {
            get {
                return this.AddressShortField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressShortField, value) != true)) {
                    this.AddressShortField = value;
                    this.RaisePropertyChanged("AddressShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Viiar.AtmFinder.W8.OnlineServices.CashDirection CashDirection {
            get {
                return this.CashDirectionField;
            }
            set {
                if ((this.CashDirectionField.Equals(value) != true)) {
                    this.CashDirectionField = value;
                    this.RaisePropertyChanged("CashDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistanceUnits {
            get {
                return this.DistanceUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceUnitsField, value) != true)) {
                    this.DistanceUnitsField = value;
                    this.RaisePropertyChanged("DistanceUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistanceView {
            get {
                return this.DistanceViewField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceViewField, value) != true)) {
                    this.DistanceViewField = value;
                    this.RaisePropertyChanged("DistanceView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Viiar.AtmFinder.W8.OnlineServices.EntityType EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((this.EntityTypeField.Equals(value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowCommissionWithdrawalSign {
            get {
                return this.ShowCommissionWithdrawalSignField;
            }
            set {
                if ((this.ShowCommissionWithdrawalSignField.Equals(value) != true)) {
                    this.ShowCommissionWithdrawalSignField = value;
                    this.RaisePropertyChanged("ShowCommissionWithdrawalSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleShort {
            get {
                return this.TitleShortField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleShortField, value) != true)) {
                    this.TitleShortField = value;
                    this.RaisePropertyChanged("TitleShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkingHours {
            get {
                return this.WorkingHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkingHoursField, value) != true)) {
                    this.WorkingHoursField = value;
                    this.RaisePropertyChanged("WorkingHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkingHoursEnd {
            get {
                return this.WorkingHoursEndField;
            }
            set {
                if ((this.WorkingHoursEndField.Equals(value) != true)) {
                    this.WorkingHoursEndField = value;
                    this.RaisePropertyChanged("WorkingHoursEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkingHoursStart {
            get {
                return this.WorkingHoursStartField;
            }
            set {
                if ((this.WorkingHoursStartField.Equals(value) != true)) {
                    this.WorkingHoursStartField = value;
                    this.RaisePropertyChanged("WorkingHoursStart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://viiar-consulting.lv/atmfinder/azureservices")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Viiar.AtmFinder.W8.OnlineServices.Entity))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChainField;
        
        private string ChainCodeField;
        
        private string CountryField;
        
        private string IconField;
        
        private string IconMapField;
        
        private string SmallIconField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chain {
            get {
                return this.ChainField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainField, value) != true)) {
                    this.ChainField = value;
                    this.RaisePropertyChanged("Chain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChainCode {
            get {
                return this.ChainCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChainCodeField, value) != true)) {
                    this.ChainCodeField = value;
                    this.RaisePropertyChanged("ChainCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconMap {
            get {
                return this.IconMapField;
            }
            set {
                if ((object.ReferenceEquals(this.IconMapField, value) != true)) {
                    this.IconMapField = value;
                    this.RaisePropertyChanged("IconMap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallIcon {
            get {
                return this.SmallIconField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallIconField, value) != true)) {
                    this.SmallIconField = value;
                    this.RaisePropertyChanged("SmallIcon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashDirection", Namespace="http://viiar-consulting.lv/atmfinder/azureservices")]
    public enum CashDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        In = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Out = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityType", Namespace="http://viiar-consulting.lv/atmfinder/azureservices")]
    public enum EntityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Atm = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Branch = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://viiar-consulting.lv/atmfinder/azureservices", ConfigurationName="OnlineServices.IAtmFinderService")]
    public interface IAtmFinderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://viiar-consulting.lv/atmfinder/azureservices/IAtmFinderService/FindNearby", ReplyAction="http://viiar-consulting.lv/atmfinder/azureservices/IAtmFinderService/FindNearbyRe" +
            "sponse")]
        System.Threading.Tasks.Task<Viiar.AtmFinder.W8.OnlineServices.ServiceResponse> FindNearbyAsync(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAtmFinderServiceChannel : Viiar.AtmFinder.W8.OnlineServices.IAtmFinderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AtmFinderServiceClient : System.ServiceModel.ClientBase<Viiar.AtmFinder.W8.OnlineServices.IAtmFinderService>, Viiar.AtmFinder.W8.OnlineServices.IAtmFinderService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AtmFinderServiceClient() : 
                base(AtmFinderServiceClient.GetDefaultBinding(), AtmFinderServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.CustomBinding_IAtmFinderService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AtmFinderServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AtmFinderServiceClient.GetBindingForEndpoint(endpointConfiguration), AtmFinderServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AtmFinderServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AtmFinderServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AtmFinderServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AtmFinderServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AtmFinderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<Viiar.AtmFinder.W8.OnlineServices.ServiceResponse> FindNearbyAsync(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count) {
            return base.Channel.FindNearbyAsync(latitude, longitude, myBanks, showOnlyMyBanks, count);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.CustomBinding_IAtmFinderService)) {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.CustomBinding_IAtmFinderService)) {
                return new System.ServiceModel.EndpointAddress("http://127.0.0.1:81/atmfinderservice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AtmFinderServiceClient.GetBindingForEndpoint(EndpointConfiguration.CustomBinding_IAtmFinderService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AtmFinderServiceClient.GetEndpointAddress(EndpointConfiguration.CustomBinding_IAtmFinderService);
        }
        
        public enum EndpointConfiguration {
            
            CustomBinding_IAtmFinderService,
        }
    }
}
