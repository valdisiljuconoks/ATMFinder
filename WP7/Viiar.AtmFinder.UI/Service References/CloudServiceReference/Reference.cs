//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Viiar.AtmFinder.UI.CloudServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://viiar-consulting.lv/atmfinder/azureservices", ConfigurationName="CloudServiceReference.IAtmFinderService")]
    public interface IAtmFinderService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://viiar-consulting.lv/atmfinder/azureservices/IAtmFinderService/FindNearby", ReplyAction="http://viiar-consulting.lv/atmfinder/azureservices/IAtmFinderService/FindNearbyRe" +
            "sponse")]
        System.IAsyncResult BeginFindNearby(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count, System.AsyncCallback callback, object asyncState);
        
        Viiar.AtmFinder.Contracts.ServiceResponse EndFindNearby(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAtmFinderServiceChannel : Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindNearbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindNearbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Viiar.AtmFinder.Contracts.ServiceResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Viiar.AtmFinder.Contracts.ServiceResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AtmFinderServiceClient : System.ServiceModel.ClientBase<Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService>, Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService {
        
        private BeginOperationDelegate onBeginFindNearbyDelegate;
        
        private EndOperationDelegate onEndFindNearbyDelegate;
        
        private System.Threading.SendOrPostCallback onFindNearbyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AtmFinderServiceClient() {
        }
        
        public AtmFinderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AtmFinderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtmFinderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AtmFinderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<FindNearbyCompletedEventArgs> FindNearbyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService.BeginFindNearby(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindNearby(latitude, longitude, myBanks, showOnlyMyBanks, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Viiar.AtmFinder.Contracts.ServiceResponse Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService.EndFindNearby(System.IAsyncResult result) {
            return base.Channel.EndFindNearby(result);
        }
        
        private System.IAsyncResult OnBeginFindNearby(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double latitude = ((double)(inValues[0]));
            double longitude = ((double)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> myBanks = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            bool showOnlyMyBanks = ((bool)(inValues[3]));
            int count = ((int)(inValues[4]));
            return ((Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService)(this)).BeginFindNearby(latitude, longitude, myBanks, showOnlyMyBanks, count, callback, asyncState);
        }
        
        private object[] OnEndFindNearby(System.IAsyncResult result) {
            Viiar.AtmFinder.Contracts.ServiceResponse retVal = ((Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService)(this)).EndFindNearby(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindNearbyCompleted(object state) {
            if ((this.FindNearbyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindNearbyCompleted(this, new FindNearbyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindNearbyAsync(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count) {
            this.FindNearbyAsync(latitude, longitude, myBanks, showOnlyMyBanks, count, null);
        }
        
        public void FindNearbyAsync(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count, object userState) {
            if ((this.onBeginFindNearbyDelegate == null)) {
                this.onBeginFindNearbyDelegate = new BeginOperationDelegate(this.OnBeginFindNearby);
            }
            if ((this.onEndFindNearbyDelegate == null)) {
                this.onEndFindNearbyDelegate = new EndOperationDelegate(this.OnEndFindNearby);
            }
            if ((this.onFindNearbyCompletedDelegate == null)) {
                this.onFindNearbyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindNearbyCompleted);
            }
            base.InvokeAsync(this.onBeginFindNearbyDelegate, new object[] {
                        latitude,
                        longitude,
                        myBanks,
                        showOnlyMyBanks,
                        count}, this.onEndFindNearbyDelegate, this.onFindNearbyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService CreateChannel() {
            return new AtmFinderServiceClientChannel(this);
        }
        
        private class AtmFinderServiceClientChannel : ChannelBase<Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService>, Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService {
            
            public AtmFinderServiceClientChannel(System.ServiceModel.ClientBase<Viiar.AtmFinder.UI.CloudServiceReference.IAtmFinderService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFindNearby(double latitude, double longitude, System.Collections.ObjectModel.ObservableCollection<string> myBanks, bool showOnlyMyBanks, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = latitude;
                _args[1] = longitude;
                _args[2] = myBanks;
                _args[3] = showOnlyMyBanks;
                _args[4] = count;
                System.IAsyncResult _result = base.BeginInvoke("FindNearby", _args, callback, asyncState);
                return _result;
            }
            
            public Viiar.AtmFinder.Contracts.ServiceResponse EndFindNearby(System.IAsyncResult result) {
                object[] _args = new object[0];
                Viiar.AtmFinder.Contracts.ServiceResponse _result = ((Viiar.AtmFinder.Contracts.ServiceResponse)(base.EndInvoke("FindNearby", _args, result)));
                return _result;
            }
        }
    }
}
